apiVersion: 1.0.0
metadata:
 name: manuela-dev
projects:
 - name: manuela-dev
   source:
     location: 'git@github.com:sa-mw-dach/manuela-dev'
     type: git
     branch: master
components:
 - id: redhat/java8/latest
   type: chePlugin
 - id: redhat/dependency-analytics/latest
   type: chePlugin
 - id: che-incubator/typescript/latest
   memoryLimit: 512Mi
   type: chePlugin
 - id: redhat/vscode-yaml/latest
   type: chePlugin
 - alias: amq
   type: dockerimage
   memoryLimit: 2048Mi
   image: 'registry.redhat.io/amq7/amq-broker:7.5'
   mountSources: false
   endpoints:
     - name: 61616/tcp
       port: 61616
   env:
     - name: AMQ_USER
       value: iotuser
     - name: AMQ_PASSWORD
       value: iotuser 
 - mountSources: true
   endpoints:
     - name: nodejs
       port: 3000 
   memoryLimit: 512Mi
   type: dockerimage
   alias: iot-consumer
   image: 'registry.redhat.io/codeready-workspaces/stacks-node-rhel8:2.0'
 - mountSources: true
   endpoints:
     - name: iot-frontend
       port: 8100 
   memoryLimit: 2048Mi
   type: dockerimage
   alias: iot-frontend
   image: 'registry.redhat.io/codeready-workspaces/stacks-node-rhel8:2.0'    
 - mountSources: true
   endpoints:
     - name: 8080/tcp
       port: 8080
   memoryLimit: 768Mi
   type: dockerimage
   volumes:
     - name: m2
       containerPath: /home/jboss/.m2
   alias: iot-software-sensor
   image: 'registry.redhat.io/codeready-workspaces/stacks-java-rhel8:2.0'
   env:
   - value: >-
      -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
      -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
      -Dsun.zip.disableMemoryMapping=true -Xms20m
      -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss
     name: JAVA_OPTS
   - value: $(JAVA_OPTS)
     name: MAVEN_OPTS
commands:
 - name: build
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-software-sensor'
     type: exec
     command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} -DskipTests clean install'
     component: iot-software-sensor
 - name: run
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-software-sensor'
     type: exec
     command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} spring-boot:run'
     component: iot-software-sensor
 - name: debug
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-software-sensor'
     type: exec
     command: >-
      mvn  -Duser.home=${HOME} spring-boot:run -Drun.jvmArguments="-Xdebug
      -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000"
     component: iot-software-sensor
 - name: test
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-software-sensor'
     type: exec
     command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} verify'
     component: iot-software-sensor
 - name: dependency-analysis
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-software-sensor'
     type: exec
     command: >-
      ${HOME}/stack-analysis.sh -f
      ${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-software-sensor/pom.xml -p
      ${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-software-sensor
     component: iot-software-sensor
 - name: install dependencies
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-consumer'
     type: exec
     command: npm install
     component: iot-consumer
 - name: start iot-consumer
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-consumer'
     type: exec
     command: nodemon index.js
     component: iot-consumer
 - name: stop iot-consumer
   actions:
   - type: exec
     command: >-
      node_server_pids=$(pgrep -fx '.*nodemon (--inspect )?index.js' | tr
      "\\n" " ") && echo "Stopping node server with PIDs:
      ${node_server_pids}" &&  kill -15 ${node_server_pids} &>/dev/null &&
      echo 'Done.'
     component: iot-consumer
 - name: install Ionic and dependencies
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-frontend'
     type: exec
     command: npm i -g ionic && npm install
     component: iot-frontend
 - name: start iot-frontend
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-frontend'
     type: exec
     command: npm run serve:dev    
     component: iot-frontend  
 - name: audit fix dependencies
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-frontend'
     type: exec
     command: npm audit fix  
     component: iot-frontend
 - name: Update iot-consumer URL config
   actions:
   - workdir: '${CHE_PROJECTS_ROOT}/manuela-dev/components/iot-frontend/src/conf'
     type: exec
     command: >-
      oc login --server=${KUBERNETES_SERVICE_HOST}:443 && 
      export IOT_CONSUMER_ROUTE=$(oc get route | grep iot-consumer | awk '{ print $2 }') &&
      sed -i 's|http://localhost:3000|https://'$IOT_CONSUMER_ROUTE'|' config.json
     component: iot-frontend               

